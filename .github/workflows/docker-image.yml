name: CI/CD for Forecast API with Docker

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: forecast-api
      SERVICE_NAME: forecast-api

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t janggon/javame-forecast-api:$IMAGE_TAG .
          docker push janggon/javame-forecast-api:$IMAGE_TAG
          echo "FORECAST_IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          port: 8822
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/aiot2/aiot2-team3/docker/javame
            SERVICE_NAME=javame-forecast-api

            # .forecast_env 생성
            cat <<EOF > .forecast_env
            URL=http://javame-influxdb:8086
            TOKEN=${{ secrets.INFLUX_TOKEN }}
            ORG=javame
            BUCKET=data
            EOF


            # .env에 이미지 태그 갱신
            if grep -q '^FORECAST_IMAGE_TAG=' .env; then
              sed -i "s|^FORECAST_IMAGE_TAG=.*|FORECAST_IMAGE_TAG=${{ env.FORECAST_IMAGE_TAG }}|" .env
            else
              echo "FORECAST_IMAGE_TAG=${{ env.FORECAST_IMAGE_TAG }}" >> .env
            fi

            docker-compose stop $SERVICE_NAME
            docker-compose rm -f $SERVICE_NAME
            docker-compose up -d $SERVICE_NAME
